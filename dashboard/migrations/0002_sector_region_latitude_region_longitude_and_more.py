# Generated by Django 5.1.3 on 2025-01-10 00:44

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('lawn_care', 'Lawn Care'), ('disinfestations', 'Disinfestations'), ('swimming_pools', 'Company specializing in swimming pools'), ('electrician', 'Electrician'), ('carpentry', 'Carpentry'), ('foundation', 'Foundation'), ('roofing', 'Roof installation and repair'), ('home_inspection', 'Home inspection'), ('plumbing', 'Plumbing work'), ('landscaping', 'Landscaping'), ('floors', 'Floors'), ('garage_doors', 'Garage Doors'), ('window_cleaning', 'Window Cleaning'), ('carpet_cleaning', 'Carpet cleaning'), ('pool_cleaning', 'Swimming pool cleaning'), ('house_cleaning', 'House cleaning'), ('fences', 'Fences'), ('appliance_repairs', 'Household appliance repairs'), ('hvac', 'Heating and Air Conditioning'), ('coatings', 'Coatings'), ('worktop_installation', 'Worktop installation services'), ('snow_removal', 'Snow removal services'), ('tree_services', 'Tree Services'), ('water_damage', 'Water damage services'), ('window_services', 'Window services'), ('procurement', 'Procurement service'), ('waste_disposal', 'Waste disposal'), ('removals', 'Removals'), ('handyman', 'Handyman')], max_length=100, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='region',
            name='latitude',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='region',
            name='longitude',
            field=models.FloatField(default=0.0),
        ),
        migrations.AlterField(
            model_name='country',
            name='name',
            field=models.CharField(default='Italia', max_length=256),
        ),
        migrations.AlterField(
            model_name='region',
            name='name',
            field=models.CharField(max_length=64),
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metropolitan_city_code', models.CharField(blank=True, max_length=5, null=True)),
                ('name', models.CharField(max_length=64)),
                ('automotive_acronym', models.CharField(max_length=3)),
                ('latitude', models.FloatField(default=0.0)),
                ('longitude', models.FloatField(default=0.0)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='province_region', to='dashboard.region')),
            ],
            options={
                'verbose_name': 'Province',
                'verbose_name_plural': 'Provinces',
            },
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('is_capital_province', models.BooleanField(default=False)),
                ('cadastral_code', models.CharField(max_length=4)),
                ('latitude', models.FloatField(default=0.0)),
                ('longitude', models.FloatField(default=0.0)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='municipality_region', to='dashboard.region')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='municipality_province', to='dashboard.province')),
            ],
            options={
                'verbose_name': 'Municipality',
                'verbose_name_plural': 'Municipalities',
            },
        ),
        migrations.CreateModel(
            name='ProfileBusiness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_job_request_desidered_per_week', models.IntegerField(default=0)),
                ('have_office_shop_to_receive_customers', models.BooleanField(default=False)),
                ('link_google_maps', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('chamber_commerce_certificate', models.ImageField(default='default.jpg', help_text='Upload your chamber of commerce certificate.', upload_to='chamber_commerce_certificates')),
                ('insurance_policy_certificate', models.FileField(default='default.jpg', help_text='Only image or PDF files are allowed.', upload_to='insurance_policy_certificates', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('holder', models.CharField(blank=True, max_length=255, null=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('region', models.ForeignKey(help_text='Select your region.', on_delete=django.db.models.deletion.CASCADE, related_name='regions', to='dashboard.region')),
                ('sectors', models.ManyToManyField(help_text='Select the sectors relevant to this business.', related_name='profile_businesses', to='dashboard.sector')),
            ],
        ),
    ]
